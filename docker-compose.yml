version: '3'

services:
  frontend:
    restart: always
    volumes:
      - ./frontend:/app
      - frontend_node_modules:/app/node_modules
    build:
      context: frontend/
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - backend
    networks:
      - apisix
  db_psql:
    image: postgres:latest
    environment:
      POSTGRES_DB: "db_psql"
      POSTGRES_USER: "myuser"
      POSTGRES_PASSWORD: "mypassword"
    ports:
      - "5432:5432"
    networks:
      - apisix
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    environment:
      POSTGRES_DB: "db_psql"
      POSTGRES_USER: "myuser"
      POSTGRES_PASSWORD: "mypassword"
      POSTGRES_HOST: "db_psql"
      RUN_FLAG: "DEV"
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    depends_on:
      - db_psql
    networks:
      - apisix
  etcd:
    image: bitnami/etcd:3.4.9
    user: root
    restart: always
    volumes:
      - ../example/etcd_data:/etcd_data
    environment:
      ETCD_DATA_DIR: /etcd_data
      ETCD_ENABLE_V2: "true"
      ALLOW_NONE_AUTHENTICATION: "yes"
      ETCD_ADVERTISE_CLIENT_URLS: "http://0.0.0.0:2379"
      ETCD_LISTEN_CLIENT_URLS: "http://0.0.0.0:2379"
    ports:
      - "2379:2379/tcp"
    networks:
      - apisix
  apisix:
    image: "apache/apisix:latest"
    restart: always
    volumes:
      - ./apisix_conf/master/config.yaml:/usr/local/apisix/conf/config.yaml:ro
    depends_on:
      - etcd
    ports:
      - "9180:9180/tcp"
      - "9080:9080/tcp"
      - "9091:9091/tcp"
      - "9443:9443/tcp"
    networks:
      - apisix
  nginx:
    build: nginx
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - frontend
      - backend
      - apisix
    networks:
      - apisix

networks:
  apisix:
    driver: bridge
volumes:
  frontend_node_modules:

